// Code generated by protoc-gen-go. DO NOT EDIT.
// source: order.proto

package entity

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Order struct {
	OrderNo              string   `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	Items                []*Item  `protobuf:"bytes,2,rep,name=Items,proto3" json:"Items,omitempty"`
	ShipToAddress        *Address `protobuf:"bytes,3,opt,name=ShipToAddress,proto3" json:"ShipToAddress,omitempty"`
	BillToAddress        *Address `protobuf:"bytes,4,opt,name=BillToAddress,proto3" json:"BillToAddress,omitempty"`
	ShipToContact        *Contact `protobuf:"bytes,5,opt,name=ShipToContact,proto3" json:"ShipToContact,omitempty"`
	BillToContact        *Contact `protobuf:"bytes,6,opt,name=BillToContact,proto3" json:"BillToContact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *Order) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Order) GetShipToAddress() *Address {
	if m != nil {
		return m.ShipToAddress
	}
	return nil
}

func (m *Order) GetBillToAddress() *Address {
	if m != nil {
		return m.BillToAddress
	}
	return nil
}

func (m *Order) GetShipToContact() *Contact {
	if m != nil {
		return m.ShipToContact
	}
	return nil
}

func (m *Order) GetBillToContact() *Contact {
	if m != nil {
		return m.BillToContact
	}
	return nil
}

type Address struct {
	Country              string   `protobuf:"bytes,1,opt,name=Country,proto3" json:"Country,omitempty"`
	Province             string   `protobuf:"bytes,2,opt,name=Province,proto3" json:"Province,omitempty"`
	City                 string   `protobuf:"bytes,3,opt,name=City,proto3" json:"City,omitempty"`
	Street1              string   `protobuf:"bytes,4,opt,name=Street1,proto3" json:"Street1,omitempty"`
	Street2              string   `protobuf:"bytes,5,opt,name=Street2,proto3" json:"Street2,omitempty"`
	PostCode             string   `protobuf:"bytes,6,opt,name=PostCode,proto3" json:"PostCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{1}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetStreet1() string {
	if m != nil {
		return m.Street1
	}
	return ""
}

func (m *Address) GetStreet2() string {
	if m != nil {
		return m.Street2
	}
	return ""
}

func (m *Address) GetPostCode() string {
	if m != nil {
		return m.PostCode
	}
	return ""
}

type Contact struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=LastName,proto3" json:"LastName,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=Phone,proto3" json:"Phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Contact) Reset()         { *m = Contact{} }
func (m *Contact) String() string { return proto.CompactTextString(m) }
func (*Contact) ProtoMessage()    {}
func (*Contact) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{2}
}

func (m *Contact) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contact.Unmarshal(m, b)
}
func (m *Contact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contact.Marshal(b, m, deterministic)
}
func (m *Contact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contact.Merge(m, src)
}
func (m *Contact) XXX_Size() int {
	return xxx_messageInfo_Contact.Size(m)
}
func (m *Contact) XXX_DiscardUnknown() {
	xxx_messageInfo_Contact.DiscardUnknown(m)
}

var xxx_messageInfo_Contact proto.InternalMessageInfo

func (m *Contact) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Contact) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Contact) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

type Item struct {
	ItemNo               string   `protobuf:"bytes,1,opt,name=ItemNo,proto3" json:"ItemNo,omitempty"`
	ItemName             string   `protobuf:"bytes,2,opt,name=ItemName,proto3" json:"ItemName,omitempty"`
	Price                float64  `protobuf:"fixed64,3,opt,name=Price,proto3" json:"Price,omitempty"`
	Quantity             int32    `protobuf:"varint,4,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{3}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetItemNo() string {
	if m != nil {
		return m.ItemNo
	}
	return ""
}

func (m *Item) GetItemName() string {
	if m != nil {
		return m.ItemName
	}
	return ""
}

func (m *Item) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Item) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type OrderListResponse struct {
	ResultCode           int64    `protobuf:"varint,1,opt,name=ResultCode,proto3" json:"ResultCode,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	OrderList            []*Order `protobuf:"bytes,3,rep,name=OrderList,proto3" json:"OrderList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderListResponse) Reset()         { *m = OrderListResponse{} }
func (m *OrderListResponse) String() string { return proto.CompactTextString(m) }
func (*OrderListResponse) ProtoMessage()    {}
func (*OrderListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{4}
}

func (m *OrderListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderListResponse.Unmarshal(m, b)
}
func (m *OrderListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderListResponse.Marshal(b, m, deterministic)
}
func (m *OrderListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderListResponse.Merge(m, src)
}
func (m *OrderListResponse) XXX_Size() int {
	return xxx_messageInfo_OrderListResponse.Size(m)
}
func (m *OrderListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrderListResponse proto.InternalMessageInfo

func (m *OrderListResponse) GetResultCode() int64 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func (m *OrderListResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OrderListResponse) GetOrderList() []*Order {
	if m != nil {
		return m.OrderList
	}
	return nil
}

type OrderQueryRequest struct {
	OrderNo              string   `protobuf:"bytes,1,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	ShipToContact        string   `protobuf:"bytes,2,opt,name=ShipToContact,proto3" json:"ShipToContact,omitempty"`
	BillToContact        string   `protobuf:"bytes,3,opt,name=BillToContact,proto3" json:"BillToContact,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderQueryRequest) Reset()         { *m = OrderQueryRequest{} }
func (m *OrderQueryRequest) String() string { return proto.CompactTextString(m) }
func (*OrderQueryRequest) ProtoMessage()    {}
func (*OrderQueryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd01338c35d87077, []int{5}
}

func (m *OrderQueryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderQueryRequest.Unmarshal(m, b)
}
func (m *OrderQueryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderQueryRequest.Marshal(b, m, deterministic)
}
func (m *OrderQueryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderQueryRequest.Merge(m, src)
}
func (m *OrderQueryRequest) XXX_Size() int {
	return xxx_messageInfo_OrderQueryRequest.Size(m)
}
func (m *OrderQueryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderQueryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrderQueryRequest proto.InternalMessageInfo

func (m *OrderQueryRequest) GetOrderNo() string {
	if m != nil {
		return m.OrderNo
	}
	return ""
}

func (m *OrderQueryRequest) GetShipToContact() string {
	if m != nil {
		return m.ShipToContact
	}
	return ""
}

func (m *OrderQueryRequest) GetBillToContact() string {
	if m != nil {
		return m.BillToContact
	}
	return ""
}

func init() {
	proto.RegisterType((*Order)(nil), "entity.Order")
	proto.RegisterType((*Address)(nil), "entity.Address")
	proto.RegisterType((*Contact)(nil), "entity.Contact")
	proto.RegisterType((*Item)(nil), "entity.Item")
	proto.RegisterType((*OrderListResponse)(nil), "entity.OrderListResponse")
	proto.RegisterType((*OrderQueryRequest)(nil), "entity.OrderQueryRequest")
}

func init() { proto.RegisterFile("order.proto", fileDescriptor_cd01338c35d87077) }

var fileDescriptor_cd01338c35d87077 = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0x45, 0xb6, 0x65, 0x57, 0xe3, 0x84, 0x92, 0xa5, 0xb4, 0x6a, 0x28, 0xc5, 0x88, 0x1c, 0x0c,
	0x05, 0xd3, 0xaa, 0xf4, 0x03, 0x12, 0x41, 0x43, 0x21, 0x49, 0xe3, 0x75, 0x2f, 0x3d, 0xaa, 0xf6,
	0xd0, 0x08, 0x64, 0xad, 0xbb, 0xbb, 0x0a, 0xa8, 0x7f, 0x53, 0xfa, 0x2f, 0xfd, 0xae, 0xb2, 0xb3,
	0xbb, 0x92, 0x65, 0x48, 0x0f, 0xcd, 0x29, 0xfb, 0xe6, 0xcd, 0xbc, 0x79, 0x33, 0x9a, 0x18, 0xa6,
	0x42, 0x6e, 0x50, 0x2e, 0x76, 0x52, 0x68, 0xc1, 0xc6, 0x58, 0xe9, 0x42, 0x37, 0xc9, 0xaf, 0x01,
	0x84, 0x9f, 0x4d, 0x9c, 0xc5, 0x30, 0xa1, 0xc7, 0x8d, 0x88, 0x83, 0x59, 0x30, 0x8f, 0xb8, 0x87,
	0x2c, 0x81, 0xf0, 0x93, 0xc6, 0xad, 0x8a, 0x07, 0xb3, 0xe1, 0x7c, 0x9a, 0x1e, 0x2d, 0x6c, 0xed,
	0xc2, 0x04, 0xb9, 0xa5, 0xd8, 0x07, 0x38, 0x5e, 0xdd, 0x15, 0xbb, 0x2f, 0xe2, 0x7c, 0xb3, 0x91,
	0xa8, 0x54, 0x3c, 0x9c, 0x05, 0xf3, 0x69, 0xfa, 0xd4, 0xe7, 0xba, 0x30, 0xef, 0x67, 0x99, 0xb2,
	0x8b, 0xa2, 0x2c, 0xbb, 0xb2, 0xd1, 0x03, 0x65, 0xbd, 0xac, 0xae, 0x5b, 0x26, 0x2a, 0x9d, 0xaf,
	0x75, 0x1c, 0xf6, 0xcb, 0x5c, 0x98, 0xf7, 0xb3, 0xba, 0x6e, 0xbe, 0x6c, 0xfc, 0x40, 0x59, 0x2f,
	0x2b, 0xf9, 0x1d, 0xc0, 0xc4, 0x77, 0x8e, 0x61, 0x92, 0x89, 0xba, 0xd2, 0xb2, 0xf1, 0x5b, 0x72,
	0x90, 0x9d, 0xc2, 0x93, 0x5b, 0x29, 0xee, 0x8b, 0x6a, 0x8d, 0xf1, 0x80, 0xa8, 0x16, 0x33, 0x06,
	0xa3, 0xac, 0xd0, 0x0d, 0x2d, 0x25, 0xe2, 0xf4, 0x36, 0x4a, 0x2b, 0x2d, 0x11, 0xf5, 0x3b, 0x1a,
	0x3a, 0xe2, 0x1e, 0x76, 0x4c, 0x4a, 0x73, 0xb5, 0x4c, 0x4a, 0x3d, 0x84, 0xd2, 0x99, 0xd8, 0x20,
	0x79, 0x37, 0x3d, 0x1c, 0x4e, 0xbe, 0x1a, 0x67, 0x76, 0xce, 0x57, 0x10, 0x7d, 0x2c, 0xa4, 0xd2,
	0x37, 0xf9, 0x16, 0x9d, 0xcd, 0x2e, 0x60, 0x44, 0xae, 0x72, 0x47, 0x3a, 0xa3, 0x1e, 0xb3, 0x67,
	0x10, 0xde, 0xde, 0x89, 0x0a, 0x9d, 0x53, 0x0b, 0x92, 0x12, 0x46, 0xe6, 0x2b, 0xb3, 0xe7, 0x30,
	0x36, 0x7f, 0xdb, 0x0b, 0x71, 0xc8, 0x28, 0xd2, 0x6b, 0x4f, 0xd1, 0x63, 0x52, 0x94, 0xc5, 0xda,
	0x2a, 0x06, 0xdc, 0x02, 0x53, 0xb1, 0xac, 0x73, 0xda, 0x3a, 0x4d, 0x1f, 0xf2, 0x16, 0x27, 0x3f,
	0xe1, 0x84, 0x2e, 0xef, 0xaa, 0x50, 0x9a, 0xa3, 0xda, 0x89, 0x4a, 0x21, 0x7b, 0x0d, 0xc0, 0x51,
	0xd5, 0xa5, 0x9d, 0xdd, 0xb4, 0x1f, 0xf2, 0xbd, 0x88, 0xd9, 0xd9, 0x35, 0x2a, 0x95, 0x7f, 0xf7,
	0x0e, 0x3c, 0x64, 0x6f, 0x20, 0x6a, 0xe5, 0xe2, 0x21, 0x5d, 0xf0, 0xb1, 0xff, 0xe0, 0x44, 0xf0,
	0x8e, 0x4f, 0x1a, 0xd7, 0x7b, 0x59, 0xa3, 0x6c, 0x38, 0xfe, 0xa8, 0x51, 0xe9, 0x7f, 0xfc, 0x67,
	0x9c, 0x1d, 0xde, 0xa1, 0xed, 0x7d, 0x70, 0x76, 0x67, 0x87, 0x67, 0x67, 0x97, 0xdb, 0x0f, 0xa6,
	0x7f, 0x06, 0x70, 0x44, 0xba, 0x2b, 0x94, 0xf7, 0x66, 0x47, 0xe7, 0x10, 0x5d, 0xa2, 0xa6, 0x90,
	0x62, 0x2f, 0x7b, 0x96, 0xf7, 0xed, 0x9d, 0xf6, 0xa9, 0xde, 0xd6, 0xae, 0xe1, 0xa4, 0x95, 0xb8,
	0x68, 0xcc, 0x15, 0xe5, 0xdb, 0xff, 0x93, 0x9a, 0x07, 0x6f, 0x03, 0xb6, 0x84, 0x17, 0x97, 0xa8,
	0xad, 0x8c, 0x27, 0x1e, 0xe3, 0xaf, 0x95, 0xf4, 0x0e, 0xb3, 0xb2, 0xc0, 0x4a, 0x3f, 0xce, 0xe7,
	0xb7, 0x31, 0xfd, 0xc2, 0xbd, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x06, 0x23, 0x02, 0xdb, 0xf0,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	GetOrders(ctx context.Context, in *OrderQueryRequest, opts ...grpc.CallOption) (*OrderListResponse, error)
	GetOrdersByStream(ctx context.Context, opts ...grpc.CallOption) (OrderService_GetOrdersByStreamClient, error)
	GetStreamResponseOrders(ctx context.Context, in *OrderQueryRequest, opts ...grpc.CallOption) (OrderService_GetStreamResponseOrdersClient, error)
	GetOrdersByClientStream(ctx context.Context, opts ...grpc.CallOption) (OrderService_GetOrdersByClientStreamClient, error)
}

type orderServiceClient struct {
	cc *grpc.ClientConn
}

func NewOrderServiceClient(cc *grpc.ClientConn) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) GetOrders(ctx context.Context, in *OrderQueryRequest, opts ...grpc.CallOption) (*OrderListResponse, error) {
	out := new(OrderListResponse)
	err := c.cc.Invoke(ctx, "/entity.OrderService/GetOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetOrdersByStream(ctx context.Context, opts ...grpc.CallOption) (OrderService_GetOrdersByStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OrderService_serviceDesc.Streams[0], "/entity.OrderService/GetOrdersByStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &orderServiceGetOrdersByStreamClient{stream}
	return x, nil
}

type OrderService_GetOrdersByStreamClient interface {
	Send(*OrderQueryRequest) error
	Recv() (*OrderListResponse, error)
	grpc.ClientStream
}

type orderServiceGetOrdersByStreamClient struct {
	grpc.ClientStream
}

func (x *orderServiceGetOrdersByStreamClient) Send(m *OrderQueryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *orderServiceGetOrdersByStreamClient) Recv() (*OrderListResponse, error) {
	m := new(OrderListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *orderServiceClient) GetStreamResponseOrders(ctx context.Context, in *OrderQueryRequest, opts ...grpc.CallOption) (OrderService_GetStreamResponseOrdersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OrderService_serviceDesc.Streams[1], "/entity.OrderService/GetStreamResponseOrders", opts...)
	if err != nil {
		return nil, err
	}
	x := &orderServiceGetStreamResponseOrdersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OrderService_GetStreamResponseOrdersClient interface {
	Recv() (*OrderListResponse, error)
	grpc.ClientStream
}

type orderServiceGetStreamResponseOrdersClient struct {
	grpc.ClientStream
}

func (x *orderServiceGetStreamResponseOrdersClient) Recv() (*OrderListResponse, error) {
	m := new(OrderListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *orderServiceClient) GetOrdersByClientStream(ctx context.Context, opts ...grpc.CallOption) (OrderService_GetOrdersByClientStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OrderService_serviceDesc.Streams[2], "/entity.OrderService/GetOrdersByClientStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &orderServiceGetOrdersByClientStreamClient{stream}
	return x, nil
}

type OrderService_GetOrdersByClientStreamClient interface {
	Send(*OrderQueryRequest) error
	CloseAndRecv() (*OrderListResponse, error)
	grpc.ClientStream
}

type orderServiceGetOrdersByClientStreamClient struct {
	grpc.ClientStream
}

func (x *orderServiceGetOrdersByClientStreamClient) Send(m *OrderQueryRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *orderServiceGetOrdersByClientStreamClient) CloseAndRecv() (*OrderListResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(OrderListResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	GetOrders(context.Context, *OrderQueryRequest) (*OrderListResponse, error)
	GetOrdersByStream(OrderService_GetOrdersByStreamServer) error
	GetStreamResponseOrders(*OrderQueryRequest, OrderService_GetStreamResponseOrdersServer) error
	GetOrdersByClientStream(OrderService_GetOrdersByClientStreamServer) error
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_GetOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderQueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/entity.OrderService/GetOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrders(ctx, req.(*OrderQueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetOrdersByStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OrderServiceServer).GetOrdersByStream(&orderServiceGetOrdersByStreamServer{stream})
}

type OrderService_GetOrdersByStreamServer interface {
	Send(*OrderListResponse) error
	Recv() (*OrderQueryRequest, error)
	grpc.ServerStream
}

type orderServiceGetOrdersByStreamServer struct {
	grpc.ServerStream
}

func (x *orderServiceGetOrdersByStreamServer) Send(m *OrderListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *orderServiceGetOrdersByStreamServer) Recv() (*OrderQueryRequest, error) {
	m := new(OrderQueryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _OrderService_GetStreamResponseOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OrderQueryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OrderServiceServer).GetStreamResponseOrders(m, &orderServiceGetStreamResponseOrdersServer{stream})
}

type OrderService_GetStreamResponseOrdersServer interface {
	Send(*OrderListResponse) error
	grpc.ServerStream
}

type orderServiceGetStreamResponseOrdersServer struct {
	grpc.ServerStream
}

func (x *orderServiceGetStreamResponseOrdersServer) Send(m *OrderListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _OrderService_GetOrdersByClientStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(OrderServiceServer).GetOrdersByClientStream(&orderServiceGetOrdersByClientStreamServer{stream})
}

type OrderService_GetOrdersByClientStreamServer interface {
	SendAndClose(*OrderListResponse) error
	Recv() (*OrderQueryRequest, error)
	grpc.ServerStream
}

type orderServiceGetOrdersByClientStreamServer struct {
	grpc.ServerStream
}

func (x *orderServiceGetOrdersByClientStreamServer) SendAndClose(m *OrderListResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *orderServiceGetOrdersByClientStreamServer) Recv() (*OrderQueryRequest, error) {
	m := new(OrderQueryRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "entity.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrders",
			Handler:    _OrderService_GetOrders_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetOrdersByStream",
			Handler:       _OrderService_GetOrdersByStream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetStreamResponseOrders",
			Handler:       _OrderService_GetStreamResponseOrders_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetOrdersByClientStream",
			Handler:       _OrderService_GetOrdersByClientStream_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "order.proto",
}
